<div class="card">
    <div class="card-body">
        <h5 class="card-title">Return List</h5>
        @if (TempData["Message"] != null)
        {
            <div class="alert alert-info">@TempData["Message"]</div>
        }
        <!-- Default Tabs -->
        <ul class="nav nav-tabs" id="myTab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="home-tab" data-bs-toggle="tab" data-bs-target="#home" type="button" role="tab" aria-controls="home" aria-selected="true">
                     Return
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="profile-tab" data-bs-toggle="tab" data-bs-target="#profile" type="button" role="tab" aria-controls="profile" aria-selected="false" tabindex="-1">
                   Refund
                </button>
            </li>

        </ul>
        <div class="tab-content pt-2" id="myTabContent">
            <div class="tab-pane fade active show" id="home" role="tabpanel" aria-labelledby="home-tab">
                <h2> Return List</h2>
                @await Component.InvokeAsync("ReturnVC", new { storeid = Convert.ToInt64(@Context.Session.GetString("StoreID")) })
            </div>
            <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                <h2> Refund List</h2>
                @await Component.InvokeAsync("RefundVC", new { storeid = Convert.ToInt64(@Context.Session.GetString("StoreID")) })
            </div>
 
        </div><!-- End Default Tabs -->

    </div>
</div>