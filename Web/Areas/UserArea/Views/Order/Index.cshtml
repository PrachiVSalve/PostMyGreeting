<div class="col-lg-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Order</h5>
            @if (TempData["Message"] != null)
            {
                <div class="alert alert-info">@TempData["Message"]</div>
            }
            <!-- Default Tabs -->
            <ul class="nav nav-tabs" id="myTab" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="home-tab" data-bs-toggle="tab" data-bs-target="#home" type="button" role="tab" aria-controls="home" aria-selected="true">
                        New 
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="profile-tab" data-bs-toggle="tab" data-bs-target="#profile" type="button" role="tab" aria-controls="profile" aria-selected="false" tabindex="-1">
                        Dispatch 
                    </button>
                </li>

            </ul>
            <div class="tab-content pt-2" id="myTabContent">
               @*  <div class="tab-pane fade active show" id="home" role="tabpanel" aria-labelledby="home-tab">
                    <h2> New Order</h2>
                    @await Component.InvokeAsync("UserNewOrderVC", new { storeid = Convert.ToInt64(@Context.Session.GetString("StoreID")) })
                </div> *@
                <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                    <h2> Dispatch </h2>
                    @await Component.InvokeAsync("UserDispatchOrderVC", new { userid = Convert.ToInt64(@Context.Session.GetString("UserID")) })
                </div>
            </div>

        </div>
    </div>
</div>
